name: CI/CD pipeline for Node.js App 

run-name: Deploy to ${{ inputs.deploy_target }} by @${{ github.actor }}

on: 
  push:
    branches: 
      - main 
  pull_request: 
    branches:
      - main 

jobs:
  lint: 
    name: Lint Code 
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout repository 
        uses: actions/checkout@v3 

      - name: Set up Node.js 
        uses: actions/setup-node@v3
        with: 
          node-version: 18 

      - name: Install dependencies 
        run: npm install 

      - name: Run ESLint 
        run: npm run lint 

  test:
    name: Run Tests 
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout repository 
        uses: actions/checkout@v3 

      - name: Set up Node.js 
        uses: actions/setup-node@v3 
        with: 
          node-version: 18 

      - name: Install dependencies 
        run: npm install 

      - name: Run tests 
        run: npm test 

  security_scan:
    name: Security Scan 
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout repository 
        uses: actions/checkout@v3 

      - name: Install Snyk 
        run: npm install -g snyk 

      - name: Run Snyk security scan 
        run: snyk test 
        env: 
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build_and_push: 
    name: Build & Push Docker Hub 
    runs-on: ubuntu-latest
    needs: [lints, test, security_scan]
    steps:
      - name: Checkout repository 
        uses: actions/checkout@v3 

      - name: Log in to Docker Hub 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image 
        run: |
          docker build -t my-nodejs-app:${{ github.sha }} . 
          docker tag my-nodejs-app:${{ github.sha }} my-dockerhub-username/my-nodejs-app:latest

      - name: Push Docker image 
        run: docker push my-dockerhub-username/my-nodejs-app:latest

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest 
    needs: build_and_push 
    steps:
      - name: Checkout repository 
        uses: actions/checkout@v3 

      - name: Set up Kubernetes 
        uses: aws/setup-kubectl@v3 

      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: us-east-1  

      - name: Update kubeconfig 
        run: aws eks update-kubeconfig --name my-eks-cluster

      - name: Deploy to EKS   
        run: kubectl apply -f k8s/

      - name: Restart Deployment 
        run: kubectl rollout restart deployment my-nodejs-app 

  
